"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from corsheaders.defaults import default_headers
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-5$s+$8p-270pqdlummg^u!&4%p7(o6@3&v05pj&a+9f^6-y(0q"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []  # Cambiar a la URL de producción

# Definir la URL base del backend
BASE_BACKEND_URL = "http://localhost:8000"  # Cambiar a la URL de producción


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # Apliaciones de terceros
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt",
    "social_django",
    "django_extensions", #simular certificado HHTPS Solo para fase desarrollo
    'django_filters',
    
    # Nuestras apliaciones instaladas
    "apps.products",
    "apps.eventos",
    "apps.usuarios",
    "apps.ubicacion",
    "apps.chat",
    "apps.notifications",
    "apps.marketflow"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "secom",  # Cambiar a nombre
        "USER": "root",
        "PASSWORD": "1004528186",  # Cambiar
        "HOST": "localhost",
        "PORT": "3307",  # 3306 o 3307
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "es-us"

TIME_ZONE = "America/Bogota"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# -------------------------------------------------------------Campos y configuraciones agregadas-------------------------------------------------------------s

AUTH_USER_MODEL = "usuarios.CustomUser"


# ------------------- Configuración de CORS -------------------
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]

# Asegúrate de que estos encabezados sean permitidos
CORS_ALLOW_HEADERS = list(default_headers) + [
    "X-CSRFToken",  # Si usas CSRF
    "Authorization",  # Si usas el encabezado Authorization
    "Content-Type",  # Asegúrate de permitir Content-Type también
]

# Permitir todas las peticiones (Util durante el desarrollo)
CORS_ALLOW_ALL_ORIGINS = True

# Permitir la Credenciales en las peticiones
CORS_ALLOW_CREDENTIALS = True

# Añade estas configuraciones
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = True


# ------------------- Configuración Autenticación  -------------------

# Configuración de la autenticación de Para Oauth2
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',  # Agregar Google OAuth
    'django.contrib.auth.backends.ModelBackend',  # Backend por defecto de Django
)

# Instalar las clases de autenticación de DRF
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        'apps.usuarios.authentication.CookiesJWTAuthentication',
    ),
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend',
                                'rest_framework.filters.OrderingFilter',  # Habilitar el ordenamiento
    ],
}

# Autenticación
AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

# Google OAuth
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = 'http://localhost:5173/auth/callback'

SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {
    'access_type': 'offline',
    'prompt': 'consent'
}
SOCIAL_AUTH_GOOGLE_OAUTH2_STATE_PARAMETER = True  # Habilita el manejo de state

# Habilita sesiones (necesario para social-auth)
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # O 'signed_cookies'
SESSION_COOKIE_NAME = "google_oauth_session"  # Distinto de la cookie JWT

# Configuración específica para social-auth
SOCIAL_AUTH_GOOGLE_OAUTH2_STATE_PARAMETER = True
SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['state']
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SECURE = False

# Configuración de los tokens
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
}


# ------------------- Configuración de archivos estáticos y media -------------------

MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# Configuración para manejar archivos estáticos y media
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# Configuraciones adicionales para el manejo de archivos
FILE_UPLOAD_PERMISSIONS = 0o644
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10MB
